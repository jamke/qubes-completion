#!/usr/bin/env bats

function setup() {
    
    source "${BATS_TEST_DIRNAME}/../tests_common.sh"

    load "${BATS_TEST_DIRNAME}/../test_helper/bats-support/load"
    load "${BATS_TEST_DIRNAME}/../test_helper/bats-assert/load"

    tests_common_setup
}


function test_wrapper() {
    run test_command "${1}"
    assert_success
    assert_output ''
}

@test "Test 000. qubes-dom0-update: qubes-dom0-update -" {
    EXPECTED_COMPREPLY=([0]="--allowerasing                               (Allow removing of installed packages to resolve problems)" [1]="--skip-broken                                (Allow resolving of depsolve problems by skipping packages)" [2]="--skip-unavailable                           (Allow skipping unavailable packages)" [3]="--allow-downgrade                            (Allow downgrade of dependencies for resolve of requested operation)" [4]="--no-allow-downgrade                         (Disable downgrade of dependencies for resolve of requested operation)" [5]="--from-repo=REPO_ID,...                      (The following items can be selected only from the specified repositories. All enabled repositories will still be used to satisfy dependencies.)" [6]="--downloadonly                               (Only download packages for a transaction)" [7]="--offline                                    (Store the transaction to be performed offline)" [8]="--advisories=ADVISORY_NAME,...               (Include content contained in advisories with specified name. List option.)" [9]="--advisory-severities=ADVISORY_SEVERITY,...  (Include content contained in advisories with specified severity. List option. Can be \"critical\", \"important\", \"moderate\", \"low\", \"none\".)" [10]="--bzs=BUGZILLA_ID,...                        (Include content contained in advisories that fix a Bugzilla ID, Eg. 123123. List option.)" [11]="--cves=CVE_ID,...                            (Include content contained in advisories that fix a CVE (Common Vulnerabilities and Exposures) ID, Eg. CVE-2201-0123. List option.)" [12]="--security                                   (Include content contained in security advisories.)" [13]="--bugfix                                     (Include content contained in bugfix advisories.)" [14]="--enhancement                                (Include content contained in enhancement advisories.)" [15]="--newpackage                                 (Include content contained in newpackage advisories.)" [16]="--store=STORED_TRANSACTION_PATH              (Store the current transaction in a directory at the specified path instead of running it.)" [17]="-h                                           (Print help)" [18]="--help                                       (Print help)" [19]="--config=CONFIG_FILE_PATH                    (Configuration file location)" [20]="-q                                           (In combination with a non-interactive command, shows just the relevant content. Suppresses messages notifying about the current state or actions of dnf5.)" [21]="--quiet                                      (In combination with a non-interactive command, shows just the relevant content. Suppresses messages notifying about the current state or actions of dnf5.)" [22]="-C                                           (Run entirely from system cache, don't update the cache and use it even in case it is expired.)" [23]="--cacheonly                                  (Run entirely from system cache, don't update the cache and use it even in case it is expired.)" [24]="--color=COLOR                                (Control whether color is used.)" [25]="--refresh                                    (Force refreshing metadata before running the command.)" [26]="--repofrompath=REPO_ID,REPO_PATH             (create additional repository using id and path)" [27]="--setopt=[REPO_ID.]OPTION=VALUE              (set arbitrary config and repo options)" [28]="--setvar=VAR_NAME=VALUE                      (set arbitrary variable)" [29]="-y                                           (automatically answer yes for all questions)" [30]="--assumeyes                                  (automatically answer yes for all questions)" [31]="--assumeno                                   (automatically answer no for all questions)" [32]="--best                                       (try the best available package versions in transactions)" [33]="--no-best                                    (do not limit the transaction to the best candidate)" [34]="--no-docs                                    (Don't install files that are marked as documentation (which includes man pages and texinfo documents))" [35]="-xpackage,...                                (exclude packages by name or glob)" [36]="--exclude=package,...                        (exclude packages by name or glob)" [37]="--enable-repo=REPO_ID,...                    (Enable additional repositories. List option. Supports globs, can be specified multiple times.)" [38]="--disable-repo=REPO_ID,...                   (Disable repositories. List option. Supports globs, can be specified multiple times.)" [39]="--repo=REPO_ID,...                           (Enable just specific repositories. List option. Supports globs, can be specified multiple times.)" [40]="--no-gpgchecks                               (disable OpenPGP signature checking (if RPM policy allows))" [41]="--no-plugins                                 (Disable all libdnf5 plugins)" [42]="--enable-plugin=PLUGIN_NAME,...              (Enable libdnf5 plugins by name. List option. Supports globs, can be specified multiple times.)" [43]="--disable-plugin=PLUGIN_NAME,...             (Disable libdnf5 plugins by name. List option. Supports globs, can be specified multiple times.)" [44]="--comment=COMMENT                            (add a comment to transaction)" [45]="--installroot=ABSOLUTE_PATH                  (set install root)" [46]="--use-host-config                            (use configuration, reposdir, and vars from the host system rather than the installroot)" [47]="--releasever=RELEASEVER                      (override the value of \$releasever in config and repo files)" [48]="--show-new-leaves                            (Show newly installed leaf packages and packages that became leaves after a transaction.)" [49]="--debugsolver                                (Dump detailed solving results into files)" [50]="--dump-main-config                           (Print main configuration values to stdout)" [51]="--dump-repo-config=REPO_ID,...               (Print repository configuration values to stdout. List option. Supports globs)" [52]="--dump-variables                             (Print variable values to stdout)" [53]="--version                                    (Show DNF5 version and exit)" [54]="--forcearch=FORCEARCH                        (Force the use of a different architecture.)" [55]="--action=" [56]="--clean" [57]="--check-only" [58]="--gui" [59]="--force-xen-upgrade" [60]="--console" [61]="--show-output" [62]="--preserve-terminal")
    test_wrapper 'qubes-dom0-update -'
}

@test "Test 001. qubes-dom0-update: qubes-dom0-update --" {
    EXPECTED_COMPREPLY=([0]="--allowerasing                               (Allow removing of installed packages to resolve problems)" [1]="--skip-broken                                (Allow resolving of depsolve problems by skipping packages)" [2]="--skip-unavailable                           (Allow skipping unavailable packages)" [3]="--allow-downgrade                            (Allow downgrade of dependencies for resolve of requested operation)" [4]="--no-allow-downgrade                         (Disable downgrade of dependencies for resolve of requested operation)" [5]="--from-repo=REPO_ID,...                      (The following items can be selected only from the specified repositories. All enabled repositories will still be used to satisfy dependencies.)" [6]="--downloadonly                               (Only download packages for a transaction)" [7]="--offline                                    (Store the transaction to be performed offline)" [8]="--advisories=ADVISORY_NAME,...               (Include content contained in advisories with specified name. List option.)" [9]="--advisory-severities=ADVISORY_SEVERITY,...  (Include content contained in advisories with specified severity. List option. Can be \"critical\", \"important\", \"moderate\", \"low\", \"none\".)" [10]="--bzs=BUGZILLA_ID,...                        (Include content contained in advisories that fix a Bugzilla ID, Eg. 123123. List option.)" [11]="--cves=CVE_ID,...                            (Include content contained in advisories that fix a CVE (Common Vulnerabilities and Exposures) ID, Eg. CVE-2201-0123. List option.)" [12]="--security                                   (Include content contained in security advisories.)" [13]="--bugfix                                     (Include content contained in bugfix advisories.)" [14]="--enhancement                                (Include content contained in enhancement advisories.)" [15]="--newpackage                                 (Include content contained in newpackage advisories.)" [16]="--store=STORED_TRANSACTION_PATH              (Store the current transaction in a directory at the specified path instead of running it.)" [17]="--help                                       (Print help)" [18]="--config=CONFIG_FILE_PATH                    (Configuration file location)" [19]="--quiet                                      (In combination with a non-interactive command, shows just the relevant content. Suppresses messages notifying about the current state or actions of dnf5.)" [20]="--cacheonly                                  (Run entirely from system cache, don't update the cache and use it even in case it is expired.)" [21]="--color=COLOR                                (Control whether color is used.)" [22]="--refresh                                    (Force refreshing metadata before running the command.)" [23]="--repofrompath=REPO_ID,REPO_PATH             (create additional repository using id and path)" [24]="--setopt=[REPO_ID.]OPTION=VALUE              (set arbitrary config and repo options)" [25]="--setvar=VAR_NAME=VALUE                      (set arbitrary variable)" [26]="--assumeyes                                  (automatically answer yes for all questions)" [27]="--assumeno                                   (automatically answer no for all questions)" [28]="--best                                       (try the best available package versions in transactions)" [29]="--no-best                                    (do not limit the transaction to the best candidate)" [30]="--no-docs                                    (Don't install files that are marked as documentation (which includes man pages and texinfo documents))" [31]="--exclude=package,...                        (exclude packages by name or glob)" [32]="--enable-repo=REPO_ID,...                    (Enable additional repositories. List option. Supports globs, can be specified multiple times.)" [33]="--disable-repo=REPO_ID,...                   (Disable repositories. List option. Supports globs, can be specified multiple times.)" [34]="--repo=REPO_ID,...                           (Enable just specific repositories. List option. Supports globs, can be specified multiple times.)" [35]="--no-gpgchecks                               (disable OpenPGP signature checking (if RPM policy allows))" [36]="--no-plugins                                 (Disable all libdnf5 plugins)" [37]="--enable-plugin=PLUGIN_NAME,...              (Enable libdnf5 plugins by name. List option. Supports globs, can be specified multiple times.)" [38]="--disable-plugin=PLUGIN_NAME,...             (Disable libdnf5 plugins by name. List option. Supports globs, can be specified multiple times.)" [39]="--comment=COMMENT                            (add a comment to transaction)" [40]="--installroot=ABSOLUTE_PATH                  (set install root)" [41]="--use-host-config                            (use configuration, reposdir, and vars from the host system rather than the installroot)" [42]="--releasever=RELEASEVER                      (override the value of \$releasever in config and repo files)" [43]="--show-new-leaves                            (Show newly installed leaf packages and packages that became leaves after a transaction.)" [44]="--debugsolver                                (Dump detailed solving results into files)" [45]="--dump-main-config                           (Print main configuration values to stdout)" [46]="--dump-repo-config=REPO_ID,...               (Print repository configuration values to stdout. List option. Supports globs)" [47]="--dump-variables                             (Print variable values to stdout)" [48]="--version                                    (Show DNF5 version and exit)" [49]="--forcearch=FORCEARCH                        (Force the use of a different architecture.)" [50]="--action=" [51]="--clean" [52]="--check-only" [53]="--gui" [54]="--force-xen-upgrade" [55]="--console" [56]="--show-output" [57]="--preserve-terminal")
    test_wrapper 'qubes-dom0-update --'
}

@test "Test 002. qubes-dom0-update: qubes-dom0-update -h" {
    EXPECTED_COMPREPLY=([0]="-h ")
    test_wrapper 'qubes-dom0-update -h'
}

@test "Test 003. qubes-dom0-update: qubes-dom0-update --en" {
    EXPECTED_COMPREPLY=([0]="--enhancement                    (Include content contained in enhancement advisories.)" [1]="--enable-repo=REPO_ID,...        (Enable additional repositories. List option. Supports globs, can be specified multiple times.)" [2]="--enable-plugin=PLUGIN_NAME,...  (Enable libdnf5 plugins by name. List option. Supports globs, can be specified multiple times.)")
    test_wrapper 'qubes-dom0-update --en'
}

@test "Test 004. qubes-dom0-update: qubes-dom0-update --enablerep" {
    EXPECTED_COMPREPLY=()
    test_wrapper 'qubes-dom0-update --enablerep'
}

@test "Test 005. qubes-dom0-update: qubes-dom0-update --a" {
    EXPECTED_COMPREPLY=([0]="--allowerasing                               (Allow removing of installed packages to resolve problems)" [1]="--allow-downgrade                            (Allow downgrade of dependencies for resolve of requested operation)" [2]="--advisories=ADVISORY_NAME,...               (Include content contained in advisories with specified name. List option.)" [3]="--advisory-severities=ADVISORY_SEVERITY,...  (Include content contained in advisories with specified severity. List option. Can be \"critical\", \"important\", \"moderate\", \"low\", \"none\".)" [4]="--assumeyes                                  (automatically answer yes for all questions)" [5]="--assumeno                                   (automatically answer no for all questions)" [6]="--action=")
    test_wrapper 'qubes-dom0-update --a'
}

@test "Test 006. qubes-dom0-update: qubes-dom0-update --act" {
    EXPECTED_COMPREPLY=([0]="--action=")
    test_wrapper 'qubes-dom0-update --act'
}

@test "Test 007. qubes-dom0-update: qubes-dom0-update --action" {
    EXPECTED_COMPREPLY=([0]="--action=")
    test_wrapper 'qubes-dom0-update --action'
}

@test "Test 008. qubes-dom0-update: qubes-dom0-update --action=" {
    EXPECTED_COMPREPLY=([0]="alias" [1]="autoremove" [2]="check" [3]="check-update" [4]="clean" [5]="deplist" [6]="distro-sync" [7]="downgrade" [8]="group" [9]="help" [10]="history" [11]="info" [12]="install" [13]="list" [14]="makecache" [15]="mark" [16]="module" [17]="provides" [18]="reinstall" [19]="remove" [20]="repoinfo" [21]="repolist" [22]="repoquery" [23]="repository-packages" [24]="search" [25]="shell" [26]="swap" [27]="updateinfo" [28]="upgrade" [29]="upgrade-minimal")
    test_wrapper 'qubes-dom0-update --action='
}

@test "Test 009. qubes-dom0-update: qubes-dom0-update --action=remo" {
    EXPECTED_COMPREPLY=([0]="remove")
    test_wrapper 'qubes-dom0-update --action=remo'
}

@test "Test 010. qubes-dom0-update: qubes-dom0-update --action=\"" {
    EXPECTED_COMPREPLY=([0]="alias" [1]="autoremove" [2]="check" [3]="check-update" [4]="clean" [5]="deplist" [6]="distro-sync" [7]="downgrade" [8]="group" [9]="help" [10]="history" [11]="info" [12]="install" [13]="list" [14]="makecache" [15]="mark" [16]="module" [17]="provides" [18]="reinstall" [19]="remove" [20]="repoinfo" [21]="repolist" [22]="repoquery" [23]="repository-packages" [24]="search" [25]="shell" [26]="swap" [27]="updateinfo" [28]="upgrade" [29]="upgrade-minimal")
    test_wrapper 'qubes-dom0-update --action="'
}

@test "Test 011. qubes-dom0-update: qubes-dom0-update --action='" {
    EXPECTED_COMPREPLY=([0]="alias" [1]="autoremove" [2]="check" [3]="check-update" [4]="clean" [5]="deplist" [6]="distro-sync" [7]="downgrade" [8]="group" [9]="help" [10]="history" [11]="info" [12]="install" [13]="list" [14]="makecache" [15]="mark" [16]="module" [17]="provides" [18]="reinstall" [19]="remove" [20]="repoinfo" [21]="repolist" [22]="repoquery" [23]="repository-packages" [24]="search" [25]="shell" [26]="swap" [27]="updateinfo" [28]="upgrade" [29]="upgrade-minimal")
    test_wrapper 'qubes-dom0-update --action='\'''
}

@test "Test 012. qubes-dom0-update: qubes-dom0-update --action=\"remo" {
    EXPECTED_COMPREPLY=([0]="remove")
    test_wrapper 'qubes-dom0-update --action="remo'
}

@test "Test 013. qubes-dom0-update: qubes-dom0-update --action='remo" {
    EXPECTED_COMPREPLY=([0]="remove")
    test_wrapper 'qubes-dom0-update --action='\''remo'
}

@test "Test 014. qubes-dom0-update: qubes-dom0-update --action=remove" {
    EXPECTED_COMPREPLY=([0]="remove")
    test_wrapper 'qubes-dom0-update --action=remove'
}

@test "Test 015. qubes-dom0-update: qubes-dom0-update --action=remove -" {
    EXPECTED_COMPREPLY=([0]="--installed-from-repo=REPO_ID,...  (Filters installed packages by the ID of the repository they were installed from.)" [1]="--no-autoremove                    (Disable removal of dependencies that are no longer used)" [2]="--offline                          (Store the transaction to be performed offline)" [3]="--store=STORED_TRANSACTION_PATH    (Store the current transaction in a directory at the specified path instead of running it.)" [4]="-h                                 (Print help)" [5]="--help                             (Print help)" [6]="--config=CONFIG_FILE_PATH          (Configuration file location)" [7]="-q                                 (In combination with a non-interactive command, shows just the relevant content. Suppresses messages notifying about the current state or actions of dnf5.)" [8]="--quiet                            (In combination with a non-interactive command, shows just the relevant content. Suppresses messages notifying about the current state or actions of dnf5.)" [9]="-C                                 (Run entirely from system cache, don't update the cache and use it even in case it is expired.)" [10]="--cacheonly                        (Run entirely from system cache, don't update the cache and use it even in case it is expired.)" [11]="--color=COLOR                      (Control whether color is used.)" [12]="--refresh                          (Force refreshing metadata before running the command.)" [13]="--repofrompath=REPO_ID,REPO_PATH   (create additional repository using id and path)" [14]="--setopt=[REPO_ID.]OPTION=VALUE    (set arbitrary config and repo options)" [15]="--setvar=VAR_NAME=VALUE            (set arbitrary variable)" [16]="-y                                 (automatically answer yes for all questions)" [17]="--assumeyes                        (automatically answer yes for all questions)" [18]="--assumeno                         (automatically answer no for all questions)" [19]="--best                             (try the best available package versions in transactions)" [20]="--no-best                          (do not limit the transaction to the best candidate)" [21]="--no-docs                          (Don't install files that are marked as documentation (which includes man pages and texinfo documents))" [22]="-xpackage,...                      (exclude packages by name or glob)" [23]="--exclude=package,...              (exclude packages by name or glob)" [24]="--enable-repo=REPO_ID,...          (Enable additional repositories. List option. Supports globs, can be specified multiple times.)" [25]="--disable-repo=REPO_ID,...         (Disable repositories. List option. Supports globs, can be specified multiple times.)" [26]="--repo=REPO_ID,...                 (Enable just specific repositories. List option. Supports globs, can be specified multiple times.)" [27]="--no-gpgchecks                     (disable OpenPGP signature checking (if RPM policy allows))" [28]="--no-plugins                       (Disable all libdnf5 plugins)" [29]="--enable-plugin=PLUGIN_NAME,...    (Enable libdnf5 plugins by name. List option. Supports globs, can be specified multiple times.)" [30]="--disable-plugin=PLUGIN_NAME,...   (Disable libdnf5 plugins by name. List option. Supports globs, can be specified multiple times.)" [31]="--comment=COMMENT                  (add a comment to transaction)" [32]="--installroot=ABSOLUTE_PATH        (set install root)" [33]="--use-host-config                  (use configuration, reposdir, and vars from the host system rather than the installroot)" [34]="--releasever=RELEASEVER            (override the value of \$releasever in config and repo files)" [35]="--show-new-leaves                  (Show newly installed leaf packages and packages that became leaves after a transaction.)" [36]="--debugsolver                      (Dump detailed solving results into files)" [37]="--dump-main-config                 (Print main configuration values to stdout)" [38]="--dump-repo-config=REPO_ID,...     (Print repository configuration values to stdout. List option. Supports globs)" [39]="--dump-variables                   (Print variable values to stdout)" [40]="--version                          (Show DNF5 version and exit)" [41]="--forcearch=FORCEARCH              (Force the use of a different architecture.)" [42]="--action=" [43]="--clean" [44]="--check-only" [45]="--gui" [46]="--force-xen-upgrade" [47]="--console" [48]="--show-output" [49]="--preserve-terminal")
    test_wrapper 'qubes-dom0-update --action=remove -'
}

@test "Test 016. qubes-dom0-update: qubes-dom0-update --action=remove --" {
    EXPECTED_COMPREPLY=([0]="--installed-from-repo=REPO_ID,...  (Filters installed packages by the ID of the repository they were installed from.)" [1]="--no-autoremove                    (Disable removal of dependencies that are no longer used)" [2]="--offline                          (Store the transaction to be performed offline)" [3]="--store=STORED_TRANSACTION_PATH    (Store the current transaction in a directory at the specified path instead of running it.)" [4]="--help                             (Print help)" [5]="--config=CONFIG_FILE_PATH          (Configuration file location)" [6]="--quiet                            (In combination with a non-interactive command, shows just the relevant content. Suppresses messages notifying about the current state or actions of dnf5.)" [7]="--cacheonly                        (Run entirely from system cache, don't update the cache and use it even in case it is expired.)" [8]="--color=COLOR                      (Control whether color is used.)" [9]="--refresh                          (Force refreshing metadata before running the command.)" [10]="--repofrompath=REPO_ID,REPO_PATH   (create additional repository using id and path)" [11]="--setopt=[REPO_ID.]OPTION=VALUE    (set arbitrary config and repo options)" [12]="--setvar=VAR_NAME=VALUE            (set arbitrary variable)" [13]="--assumeyes                        (automatically answer yes for all questions)" [14]="--assumeno                         (automatically answer no for all questions)" [15]="--best                             (try the best available package versions in transactions)" [16]="--no-best                          (do not limit the transaction to the best candidate)" [17]="--no-docs                          (Don't install files that are marked as documentation (which includes man pages and texinfo documents))" [18]="--exclude=package,...              (exclude packages by name or glob)" [19]="--enable-repo=REPO_ID,...          (Enable additional repositories. List option. Supports globs, can be specified multiple times.)" [20]="--disable-repo=REPO_ID,...         (Disable repositories. List option. Supports globs, can be specified multiple times.)" [21]="--repo=REPO_ID,...                 (Enable just specific repositories. List option. Supports globs, can be specified multiple times.)" [22]="--no-gpgchecks                     (disable OpenPGP signature checking (if RPM policy allows))" [23]="--no-plugins                       (Disable all libdnf5 plugins)" [24]="--enable-plugin=PLUGIN_NAME,...    (Enable libdnf5 plugins by name. List option. Supports globs, can be specified multiple times.)" [25]="--disable-plugin=PLUGIN_NAME,...   (Disable libdnf5 plugins by name. List option. Supports globs, can be specified multiple times.)" [26]="--comment=COMMENT                  (add a comment to transaction)" [27]="--installroot=ABSOLUTE_PATH        (set install root)" [28]="--use-host-config                  (use configuration, reposdir, and vars from the host system rather than the installroot)" [29]="--releasever=RELEASEVER            (override the value of \$releasever in config and repo files)" [30]="--show-new-leaves                  (Show newly installed leaf packages and packages that became leaves after a transaction.)" [31]="--debugsolver                      (Dump detailed solving results into files)" [32]="--dump-main-config                 (Print main configuration values to stdout)" [33]="--dump-repo-config=REPO_ID,...     (Print repository configuration values to stdout. List option. Supports globs)" [34]="--dump-variables                   (Print variable values to stdout)" [35]="--version                          (Show DNF5 version and exit)" [36]="--forcearch=FORCEARCH              (Force the use of a different architecture.)" [37]="--action=" [38]="--clean" [39]="--check-only" [40]="--gui" [41]="--force-xen-upgrade" [42]="--console" [43]="--show-output" [44]="--preserve-terminal")
    test_wrapper 'qubes-dom0-update --action=remove --'
}

@test "Test 017. qubes-dom0-update: qubes-dom0-update --action=\"remove\"" {
    EXPECTED_COMPREPLY=([0]="remove")
    test_wrapper 'qubes-dom0-update --action="remove"'
}

@test "Test 018. qubes-dom0-update: qubes-dom0-update --action=\"remove\" -" {
    EXPECTED_COMPREPLY=([0]="--action=" [1]="--clean" [2]="--check-only" [3]="--gui" [4]="--force-xen-upgrade" [5]="--console" [6]="--show-output" [7]="--preserve-terminal")
    test_wrapper 'qubes-dom0-update --action="remove" -'
}

@test "Test 019. qubes-dom0-update: qubes-dom0-update --action=\"remove\" --" {
    EXPECTED_COMPREPLY=([0]="--action=" [1]="--clean" [2]="--check-only" [3]="--gui" [4]="--force-xen-upgrade" [5]="--console" [6]="--show-output" [7]="--preserve-terminal")
    test_wrapper 'qubes-dom0-update --action="remove" --'
}

@test "Test 020. qubes-dom0-update: qubes-dom0-update --action='remove'" {
    EXPECTED_COMPREPLY=([0]="remove")
    test_wrapper 'qubes-dom0-update --action='\''remove'\'''
}

@test "Test 021. qubes-dom0-update: qubes-dom0-update --action='remove' -" {
    EXPECTED_COMPREPLY=([0]="--action=" [1]="--clean" [2]="--check-only" [3]="--gui" [4]="--force-xen-upgrade" [5]="--console" [6]="--show-output" [7]="--preserve-terminal")
    test_wrapper 'qubes-dom0-update --action='\''remove'\'' -'
}

@test "Test 022. qubes-dom0-update: qubes-dom0-update --action='remove' --" {
    EXPECTED_COMPREPLY=([0]="--action=" [1]="--clean" [2]="--check-only" [3]="--gui" [4]="--force-xen-upgrade" [5]="--console" [6]="--show-output" [7]="--preserve-terminal")
    test_wrapper 'qubes-dom0-update --action='\''remove'\'' --'
}

@test "Test 023. qubes-dom0-update: qubes-dom0-update --something_unknown -" {
    EXPECTED_COMPREPLY=([0]="--action=" [1]="--clean" [2]="--check-only" [3]="--gui" [4]="--force-xen-upgrade" [5]="--console" [6]="--show-output" [7]="--preserve-terminal")
    test_wrapper 'qubes-dom0-update --something_unknown -'
}

@test "Test 024. qubes-dom0-update: qubes-dom0-update --something_unknown --" {
    EXPECTED_COMPREPLY=([0]="--action=" [1]="--clean" [2]="--check-only" [3]="--gui" [4]="--force-xen-upgrade" [5]="--console" [6]="--show-output" [7]="--preserve-terminal")
    test_wrapper 'qubes-dom0-update --something_unknown --'
}

@test "Test 025. qubes-dom0-update: qubes-dom0-update --something_unknown -- -" {
    EXPECTED_COMPREPLY=()
    test_wrapper 'qubes-dom0-update --something_unknown -- -'
}

@test "Test 026. qubes-dom0-update: qubes-dom0-update --something_unknown -h" {
    EXPECTED_COMPREPLY=()
    test_wrapper 'qubes-dom0-update --something_unknown -h'
}

@test "Test 027. qubes-dom0-update: qubes-dom0-update --something_unknown --act" {
    EXPECTED_COMPREPLY=([0]="--action=")
    test_wrapper 'qubes-dom0-update --something_unknown --act'
}

@test "Test 028. qubes-dom0-update: qubes-dom0-update something_unknown=" {
    EXPECTED_COMPREPLY=()
    test_wrapper 'qubes-dom0-update something_unknown='
}

@test "Test 029. qubes-dom0-update: qubes-dom0-update something_unknown -" {
    EXPECTED_COMPREPLY=([0]="--allowerasing                               (Allow removing of installed packages to resolve problems)" [1]="--skip-broken                                (Allow resolving of depsolve problems by skipping packages)" [2]="--skip-unavailable                           (Allow skipping unavailable packages)" [3]="--allow-downgrade                            (Allow downgrade of dependencies for resolve of requested operation)" [4]="--no-allow-downgrade                         (Disable downgrade of dependencies for resolve of requested operation)" [5]="--from-repo=REPO_ID,...                      (The following items can be selected only from the specified repositories. All enabled repositories will still be used to satisfy dependencies.)" [6]="--downloadonly                               (Only download packages for a transaction)" [7]="--offline                                    (Store the transaction to be performed offline)" [8]="--advisories=ADVISORY_NAME,...               (Include content contained in advisories with specified name. List option.)" [9]="--advisory-severities=ADVISORY_SEVERITY,...  (Include content contained in advisories with specified severity. List option. Can be \"critical\", \"important\", \"moderate\", \"low\", \"none\".)" [10]="--bzs=BUGZILLA_ID,...                        (Include content contained in advisories that fix a Bugzilla ID, Eg. 123123. List option.)" [11]="--cves=CVE_ID,...                            (Include content contained in advisories that fix a CVE (Common Vulnerabilities and Exposures) ID, Eg. CVE-2201-0123. List option.)" [12]="--security                                   (Include content contained in security advisories.)" [13]="--bugfix                                     (Include content contained in bugfix advisories.)" [14]="--enhancement                                (Include content contained in enhancement advisories.)" [15]="--newpackage                                 (Include content contained in newpackage advisories.)" [16]="--store=STORED_TRANSACTION_PATH              (Store the current transaction in a directory at the specified path instead of running it.)" [17]="-h                                           (Print help)" [18]="--help                                       (Print help)" [19]="--config=CONFIG_FILE_PATH                    (Configuration file location)" [20]="-q                                           (In combination with a non-interactive command, shows just the relevant content. Suppresses messages notifying about the current state or actions of dnf5.)" [21]="--quiet                                      (In combination with a non-interactive command, shows just the relevant content. Suppresses messages notifying about the current state or actions of dnf5.)" [22]="-C                                           (Run entirely from system cache, don't update the cache and use it even in case it is expired.)" [23]="--cacheonly                                  (Run entirely from system cache, don't update the cache and use it even in case it is expired.)" [24]="--color=COLOR                                (Control whether color is used.)" [25]="--refresh                                    (Force refreshing metadata before running the command.)" [26]="--repofrompath=REPO_ID,REPO_PATH             (create additional repository using id and path)" [27]="--setopt=[REPO_ID.]OPTION=VALUE              (set arbitrary config and repo options)" [28]="--setvar=VAR_NAME=VALUE                      (set arbitrary variable)" [29]="-y                                           (automatically answer yes for all questions)" [30]="--assumeyes                                  (automatically answer yes for all questions)" [31]="--assumeno                                   (automatically answer no for all questions)" [32]="--best                                       (try the best available package versions in transactions)" [33]="--no-best                                    (do not limit the transaction to the best candidate)" [34]="--no-docs                                    (Don't install files that are marked as documentation (which includes man pages and texinfo documents))" [35]="-xpackage,...                                (exclude packages by name or glob)" [36]="--exclude=package,...                        (exclude packages by name or glob)" [37]="--enable-repo=REPO_ID,...                    (Enable additional repositories. List option. Supports globs, can be specified multiple times.)" [38]="--disable-repo=REPO_ID,...                   (Disable repositories. List option. Supports globs, can be specified multiple times.)" [39]="--repo=REPO_ID,...                           (Enable just specific repositories. List option. Supports globs, can be specified multiple times.)" [40]="--no-gpgchecks                               (disable OpenPGP signature checking (if RPM policy allows))" [41]="--no-plugins                                 (Disable all libdnf5 plugins)" [42]="--enable-plugin=PLUGIN_NAME,...              (Enable libdnf5 plugins by name. List option. Supports globs, can be specified multiple times.)" [43]="--disable-plugin=PLUGIN_NAME,...             (Disable libdnf5 plugins by name. List option. Supports globs, can be specified multiple times.)" [44]="--comment=COMMENT                            (add a comment to transaction)" [45]="--installroot=ABSOLUTE_PATH                  (set install root)" [46]="--use-host-config                            (use configuration, reposdir, and vars from the host system rather than the installroot)" [47]="--releasever=RELEASEVER                      (override the value of \$releasever in config and repo files)" [48]="--show-new-leaves                            (Show newly installed leaf packages and packages that became leaves after a transaction.)" [49]="--debugsolver                                (Dump detailed solving results into files)" [50]="--dump-main-config                           (Print main configuration values to stdout)" [51]="--dump-repo-config=REPO_ID,...               (Print repository configuration values to stdout. List option. Supports globs)" [52]="--dump-variables                             (Print variable values to stdout)" [53]="--version                                    (Show DNF5 version and exit)" [54]="--forcearch=FORCEARCH                        (Force the use of a different architecture.)")
    test_wrapper 'qubes-dom0-update something_unknown -'
}

@test "Test 030. qubes-dom0-update: qubes-dom0-update something_unknown --" {
    EXPECTED_COMPREPLY=([0]="--allowerasing                               (Allow removing of installed packages to resolve problems)" [1]="--skip-broken                                (Allow resolving of depsolve problems by skipping packages)" [2]="--skip-unavailable                           (Allow skipping unavailable packages)" [3]="--allow-downgrade                            (Allow downgrade of dependencies for resolve of requested operation)" [4]="--no-allow-downgrade                         (Disable downgrade of dependencies for resolve of requested operation)" [5]="--from-repo=REPO_ID,...                      (The following items can be selected only from the specified repositories. All enabled repositories will still be used to satisfy dependencies.)" [6]="--downloadonly                               (Only download packages for a transaction)" [7]="--offline                                    (Store the transaction to be performed offline)" [8]="--advisories=ADVISORY_NAME,...               (Include content contained in advisories with specified name. List option.)" [9]="--advisory-severities=ADVISORY_SEVERITY,...  (Include content contained in advisories with specified severity. List option. Can be \"critical\", \"important\", \"moderate\", \"low\", \"none\".)" [10]="--bzs=BUGZILLA_ID,...                        (Include content contained in advisories that fix a Bugzilla ID, Eg. 123123. List option.)" [11]="--cves=CVE_ID,...                            (Include content contained in advisories that fix a CVE (Common Vulnerabilities and Exposures) ID, Eg. CVE-2201-0123. List option.)" [12]="--security                                   (Include content contained in security advisories.)" [13]="--bugfix                                     (Include content contained in bugfix advisories.)" [14]="--enhancement                                (Include content contained in enhancement advisories.)" [15]="--newpackage                                 (Include content contained in newpackage advisories.)" [16]="--store=STORED_TRANSACTION_PATH              (Store the current transaction in a directory at the specified path instead of running it.)" [17]="--help                                       (Print help)" [18]="--config=CONFIG_FILE_PATH                    (Configuration file location)" [19]="--quiet                                      (In combination with a non-interactive command, shows just the relevant content. Suppresses messages notifying about the current state or actions of dnf5.)" [20]="--cacheonly                                  (Run entirely from system cache, don't update the cache and use it even in case it is expired.)" [21]="--color=COLOR                                (Control whether color is used.)" [22]="--refresh                                    (Force refreshing metadata before running the command.)" [23]="--repofrompath=REPO_ID,REPO_PATH             (create additional repository using id and path)" [24]="--setopt=[REPO_ID.]OPTION=VALUE              (set arbitrary config and repo options)" [25]="--setvar=VAR_NAME=VALUE                      (set arbitrary variable)" [26]="--assumeyes                                  (automatically answer yes for all questions)" [27]="--assumeno                                   (automatically answer no for all questions)" [28]="--best                                       (try the best available package versions in transactions)" [29]="--no-best                                    (do not limit the transaction to the best candidate)" [30]="--no-docs                                    (Don't install files that are marked as documentation (which includes man pages and texinfo documents))" [31]="--exclude=package,...                        (exclude packages by name or glob)" [32]="--enable-repo=REPO_ID,...                    (Enable additional repositories. List option. Supports globs, can be specified multiple times.)" [33]="--disable-repo=REPO_ID,...                   (Disable repositories. List option. Supports globs, can be specified multiple times.)" [34]="--repo=REPO_ID,...                           (Enable just specific repositories. List option. Supports globs, can be specified multiple times.)" [35]="--no-gpgchecks                               (disable OpenPGP signature checking (if RPM policy allows))" [36]="--no-plugins                                 (Disable all libdnf5 plugins)" [37]="--enable-plugin=PLUGIN_NAME,...              (Enable libdnf5 plugins by name. List option. Supports globs, can be specified multiple times.)" [38]="--disable-plugin=PLUGIN_NAME,...             (Disable libdnf5 plugins by name. List option. Supports globs, can be specified multiple times.)" [39]="--comment=COMMENT                            (add a comment to transaction)" [40]="--installroot=ABSOLUTE_PATH                  (set install root)" [41]="--use-host-config                            (use configuration, reposdir, and vars from the host system rather than the installroot)" [42]="--releasever=RELEASEVER                      (override the value of \$releasever in config and repo files)" [43]="--show-new-leaves                            (Show newly installed leaf packages and packages that became leaves after a transaction.)" [44]="--debugsolver                                (Dump detailed solving results into files)" [45]="--dump-main-config                           (Print main configuration values to stdout)" [46]="--dump-repo-config=REPO_ID,...               (Print repository configuration values to stdout. List option. Supports globs)" [47]="--dump-variables                             (Print variable values to stdout)" [48]="--version                                    (Show DNF5 version and exit)" [49]="--forcearch=FORCEARCH                        (Force the use of a different architecture.)")
    test_wrapper 'qubes-dom0-update something_unknown --'
}

@test "Test 031. qubes-dom0-update: qubes-dom0-update something_unknown -- -" {
    EXPECTED_COMPREPLY=()
    test_wrapper 'qubes-dom0-update something_unknown -- -'
}

@test "Test 032. qubes-dom0-update: qubes-dom0-update something_unknown -h" {
    EXPECTED_COMPREPLY=([0]="-h ")
    test_wrapper 'qubes-dom0-update something_unknown -h'
}

@test "Test 033. qubes-dom0-update: qubes-dom0-update something_unknown --act" {
    EXPECTED_COMPREPLY=()
    test_wrapper 'qubes-dom0-update something_unknown --act'
}

